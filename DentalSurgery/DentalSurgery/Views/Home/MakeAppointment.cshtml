@model DentalSurgery.ViewModels.MakeAppointmentViewModel

@{
    ViewBag.Title = "MakeAppointment";
}

<div class="opinion-header">
    <h2>Zapis na wizytę</h2>
</div>


@Html.AntiForgeryToken()

@using (Html.BeginForm(FormMethod.Post))
{

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "input form-control", type = "text", style = "width: 250px;", placeHolder = "Data wizyty", onfocus = "(this.type='date')", onblur = "(this.type='text')", id = "date" } })
                @* @Html.ValidationMessageFor(model => model.Date, "Data niepoprawna", new { @class = "text-danger" })*@
            </div>
        </div>
        <h6>Wybierz ilość zabiegów</h6>
        <div class="row appointment-group" , style="margin-bottom: 15px">
            @Html.EditorFor(model => model.NumberOfSurgeries, new { htmlAttributes = new { @class = "form-control", style = "width: 100px;" } })
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="action:Number" value="Wyślij" class="btn btn-default" style="background-color: dodgerblue; color: aliceblue" />
            </div>
        </div>
        @if (Model.NumberOfSurgeries != 0)
        {
            <div class="appointment-group">

                @for (int i = 0; i < Model.NumberOfSurgeries; i++)
                {
                    <div class="row">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.SurgeriesIDs[i], Model.SurgeryChoice, $"Wybierz {i + 1}. zabieg", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TeethIDs[i], Model.ToothChoice, "Wybierz ząb", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>
                    </div>
                }

                @*<div class="row">
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.FirstSurgeryId, Model.SurgeryChoice, "Wybierz pierwszy zabieg", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.FirstToothId, Model.ToothChoice, "Wybierz ząb", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>

                    </div>

                    <button onclick="myFunction()">Try it</button>


                    <div class="row">

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.SecondSurgeryId, Model.SurgeryChoice, "Wybierz drugi zabieg", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.SecondToothId, Model.ToothChoice, "Wybierz ząb", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.SecondSurgeryId, Model.SurgeryChoice, "Wybierz trzeci zabieg", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ThirdSurgeryId, Model.ToothChoice, "Wybierz ząb", new { @class = "form-control input", style = "width: auto" })
                            </div>
                        </div>
                    </div>*@
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="action:Save" value="Zapisz się" class="btn btn-default" style="background-color: dodgerblue; color: aliceblue" />
            </div>
        </div>
        }
    </div>
}
<script>
    function myFunction() {
        var row = document.createElement("div");
        row.className = "row";
        var formgroup = document.createElement("div");
        formgroup.className = "form-group";
        var col = document.createElement("div");
        col.className = "col-md-10";
        var x = document.createTextNode("Html.DropDownListFor(model => model.ThirdSurgeryId, Model.ToothChoice, \"Wybierz ząb\", new { class = \"form-control input\", style = \"width: auto\" })");
        col.appendChild(x);
        formgroup.appendChild(col);
        row.appendChild(formgroup);
        document.getElementById("myDIV").appendChild(row);



        //var para = document.createElement("P");
        //var t = document.createTextNode("This is a paragraph.");
        //para.appendChild(t);

    }
</script>
